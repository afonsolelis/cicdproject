name: CI/CD - Pipeline Completo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install flask pytest

      - name: Executar build (opcional)
        run: |
          echo "Executando build..."
          # Adicione comandos de build aqui, se necessário

  # linter:
  #   runs-on: ubuntu-latest
  #   needs: build  # Depende do job de build
  #   steps:
  #     - name: Checkout do repositório
  #       uses: actions/checkout@v3

  #     - name: Configurar ambiente Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Instalar linter (Flake8)
  #       run: |
  #         pip install flake8

  #     - name: Executar linter
  #       run: |
  #         # flake8 . --count --show-source --statistics

  test:
    runs-on: ubuntu-latest
    # needs: linter  # Depende do job de linter
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install flask pytest

      - name: Rodar testes com pytest
        run: |
          pytest test_app.py

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Depende do job de teste
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar ambiente Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install flask pytest

      - name: Disparar deploy no Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}  # Adicione sua chave API do Render como secret no GitHub
        run: |
          curl -s -X POST "https://api.render.com/v1/services/<service-id>/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
                  "clearCache": "clear"
                }'